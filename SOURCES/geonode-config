#!/bin/bash
#Need to add usage
if [ "$EUID" -ne 0 ]
  then echo "geonode-config requires sudo user access"
  exit
fi

# global values
VAR="$2"
CHAR="[:alnum:]"
IS_REPLACE=0
GEONODE_ETC=/etc/geonode
GEOSERVER_DATA_DIR=/var/lib/geoserver

database()
{
  if [ ! -d /var/lib/pgsql/9.3/data/base ]; then
    service postgresql-9.3 initdb
    chkconfig postgresql-9.3 on
    sed -i.geonode "s/  peer/  trust/g" /var/lib/pgsql/9.3/data/pg_hba.conf
    sed -i.geonode "s/  ident/  md5/g" /var/lib/pgsql/9.3/data/pg_hba.conf
    service postgresql-9.3 restart
  fi
  PGUSER=$(psql -U postgres -c '\du' | cut -d \| -f 1 | grep -w geonode | wc -l)
  if [ $PGUSER == 0 ]
  then
    psqlpass=$(cat /dev/urandom | tr -cd "$CHAR" | head -c ${1:-16})
    sed -i "s@\(DATABASE_PASSWORD[  ]*=[  ]*\).*@\1\'$psqlpass'@g" $GEONODE_ETC/local_settings.py
    psql -U postgres -c "CREATE USER geonode WITH PASSWORD '$psqlpass';"
  else
    echo "geonode user already created"
    echo "you may need to manually set the django setting in local_settings.py"
  fi
  GEONODE_DB=$(psql -U postgres -lqt | cut -d \| -f 1 | grep -w geonode | wc -l)
  if [ $GEONODE_DB == 0 ]
  then
    psql -U postgres -c "CREATE DATABASE geonode OWNER geonode;"
    psql -U geonode -d geonode < /var/lib/geoserver/geonode_authorize_layer.sql
  else
    echo "geonode database already created"
  fi
  GEONODE_DATA_DB=$(psql -U postgres -lqt | cut -d \| -f 1 | grep -w geonode_data | wc -l)
  if [ $GEONODE_DATA_DB == 0 ]
  then
    psql -U postgres -c "CREATE DATABASE geonode_data OWNER geonode;"
    psql -U postgres -d geonode_data -c 'CREATE EXTENSION postgis;'
    psql -U postgres -d geonode_data -c 'GRANT ALL ON geometry_columns TO PUBLIC;'
    psql -U postgres -d geonode_data -c 'GRANT ALL ON spatial_ref_sys TO PUBLIC;'
  else
    echo "geonode_data database already created"
  fi
}

django()
{
  secretkey=$(cat /dev/urandom | tr -cd "$CHAR" | head -c ${1:-32})
  sed -i "s@\(SECRET_KEY[  ]*=[  ]*\).*@\1\'$secretkey'@g" $GEONODE_ETC/local_settings.py
}

selinux()
{
  iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
  service iptables save
  setsebool -P httpd_can_network_connect=1 httpd_can_network_connect_db=1
  service iptables restart
  service httpd restart
}

syncdb()
{
  python2.7 /var/lib/geonode/manage.py syncdb --noinput
}

collectstatic()
{
  python2.7 /var/lib/geonode/manage.py collectstatic --noinput
}

changepassword()
{
  USER="$VAR"
  if [ -z "$USER" ];
  then
    echo "you need to declare the user name"
    echo "example: geonode-config changepassword admin"
  else
    python2.7 /var/lib/geonode/manage.py changepassword $USER
  fi
}

createsuperuser()
{
  python2.7 /var/lib/geonode/manage.py createsuperuser
}

# need to check for value and require it, like changepassword
# maybe if blank then get the eth0 value?
updateip()
{
  NEWIP="$VAR"
  if [ -z "$NEWIP" ];
  then
    echo "you need to declare the ip or domain name"
    echo "example: geonode-config all example.com"
  else
    # Replace SITEURL in $GEONODE_ETC/local_settings.py
    echo "Replacing SITEURL value with '$NEWIP' in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
    sed -i "s@\(SITEURL[  ]*=[  ]*\).*@\1\'http://$NEWIP\/'@g" $GEONODE_ETC/local_settings.py
    echo "done."

    echo "Adding entry for '$NEWIP' in $GEOSERVER_DATA_DIR/printing/config.yaml ... " | tr -d '\n'
    printing_config=$GEOSERVER_DATA_DIR/printing/config.yaml

    if grep -q "$NEWIP" "$printing_config"
    then
        echo "'$NEWIP' already found to the printing whitelist."
    else
        sed -i "s#hosts:#hosts:\n  - !ipMatch\n    ip: $NEWIP#g" $printing_config
        echo "done."
    fi

    # if ALLOWED_HOSTS already exists ...
    if grep -q "^[  ]*ALLOWED_HOSTS[  ]*=" "$GEONODE_ETC/local_settings.py"
    then
        if [ $IS_REPLACE -eq 1 ]
        then
            echo "Replacing ALLOWED_HOSTS in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
            sed -i "s/^\([  ]*ALLOWED_HOSTS[  ]*=\).*/\1 [ 'localhost', '$NEWIP', ]/g" "$GEONODE_ETC/local_settings.py"
            echo "done."
        else
            echo "Adding $NEWIP to ALLOWED_HOSTS in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
            items="$(grep "^[   ]*ALLOWED_HOSTS[  ]*=" "$GEONODE_ETC/local_settings.py" | \
                     sed 's/^[  ]*ALLOWED_HOSTS[  ]*=[  ]*\[//g;s/\][   ]*$//g')"
            already_found=0
            oldifs="$IFS"
            IFS=','
            for item in $items
            do
                item_cls="$(echo "$item" | sed "s/^[  ]*['\"]//g;s/['\"][   ]*$//g")"
                if [ "$item_cls" = "$NEWIP" ]
                then
                    already_found=1
                    break
                fi
            done
            IFS="$oldifs"
            if [ $already_found -eq 0 ]
            then
                if echo "$items" | grep -q ',[  ]*$'
                then
                    items="${items}'$NEWIP', "
                else
                    items="${items}, '$NEWIP', "
                fi
                sed -i "s/^\([  ]*ALLOWED_HOSTS[  ]*=\).*/\1 [ $items ]/g" "$GEONODE_ETC/local_settings.py"
                echo "done."
            else
                echo "'$NEWIP' already found in ALLOWED_HOSTS list."
            fi
        fi
    else
        echo "Adding ALLOWED_HOSTS with in $GEONODE_ETC/local_settings.py ... " | tr -d '\n'
        echo "ALLOWED_HOSTS=['localhost', '$NEWIP', ]" >> $GEONODE_ETC/local_settings.py
        echo "done."
    fi
    python2.7 /var/lib/geonode/manage.py fixsitename
    service httpd restart
    python2.7 /var/lib/geonode/manage.py updatelayers
    python2.7 /var/lib/geonode/manage.py updatemaplayerip
  fi
}

shell()
{
  python2.7 /var/lib/geonode/manage.py shell
}

dbshell()
{
  python2.7 /var/lib/geonode/manage.py dbshell
}

start_all()
{
  chkconfig tomcat on
  echo "Starting tomcat service"
  service tomcat start
  chkconfig geonode on
  echo "Starting geonode service"
  service geonode start
  chkconfig httpd on
  echo "Starting httpd service"
  service httpd start
}

stop_all()
{
  echo "Stopping tomcat service"
  service tomcat stop
  echo "Stopping geonode service"
  service geonode stop
  echo "Stopping httpd service"
  service httpd stop
}

case "$1" in
    init)
        if [ -z "$VAR" ];
        then
          echo "you need to declare the ip or domain name"
          echo "example: geonode-config all example.com"
        else
          database
          django
          updateip
          collectstatic
          syncdb
          selinux
          start_all
          createsuperuser
        fi
        RETVAL=$?
        ;;
    database)
        database
        RETVAL=$?
        ;;
    django)
        django
        RETVAL=$?
        ;;
    selinux)
        selinux
        RETVAL=$?
        ;;
    updateip)
        updateip
        RETVAL=$?
        ;;
    syncdb)
        syncdb
        RETVAL=$?
        ;;
    collectstatic)
        collectstatic
        RETVAL=$?
        ;;
    changepassword)
        changepassword
        RETVAL=$?
        ;;
    createsuperuser)
        createsuperuser
        RETVAL=$?
        ;;
    shell)
        shell
        RETVAL=$?
        ;;
    dbshell)
        dbshell
        RETVAL=$?
        ;;
    start_all)
        echo "Stopping all service first"
        stop_all
        start_all
        RETVAL=$?
        ;;
    stop_all)
        stop_all
        RETVAL=$?
        ;;
    *)
        echo $"Usage: $0 {init|database|django|selinux|updateip|syncdb|collectstatic|changepassword|createsuperuser|shell|dbshell|start_all|stop_all}"
        exit 1
esac
